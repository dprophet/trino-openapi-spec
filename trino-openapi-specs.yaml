openapi: 3.0.1
info:
  title: Trino Client API
  version: '1.0.2'
  description: API for submitting SQL queries and managing their lifecycle in Trino.

servers:
  - url: https://{host}/v1
    variables:
      host:
        default: localhost:8080

paths:
  /statement:
    post:
      summary: Submit a SQL query
      operationId: submitQuery
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "SELECT * FROM table"
      responses:
        '200':
          description: Query submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      responses:
        '200':
          description: Query submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '401':
          description: Unauthorized
          headers:
            WWW-Authenticate:
              schema:
                type: string
                description: |
                  Contains authentication schemes and URLs for OAuth and Basic Authentication.
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"      parameters:
        - name: X-Trino-User
          in: header
          required: true
          description: "The user submitting the query."
          schema:
            type: string
        - name: X-Trino-Original-User
          in: header
          description: "The original user on whose behalf the query is submitted."
          schema:
            type: string
        - name: X-Trino-Source
          in: header
          description: "The source of the query, used for logging and debugging."
          schema:
            type: string
        - name: X-Trino-Catalog
          in: header
          description: "The catalog to query."
          schema:
            type: string
        - name: X-Trino-Schema
          in: header
          description: "The schema within the catalog to query."
          schema:
            type: string
        - name: X-Trino-Time-Zone
          in: header
          description: "The client's time zone for timestamp and time functions."
          schema:
            type: string
        - name: X-Trino-Language
          in: header
          description: "The client's preferred language for error messages."
          schema:
            type: string
        - name: X-Trino-Transaction-Id
          in: header
          description: "The transaction ID, if any, associated with the query."
          schema:
            type: string
        - name: X-Trino-Client-Capabilities
          in: header
          description: "List of features supported by the client."
          schema:
            type: string

  /query/{queryId}/results:
    get:
      summary: Get query results
      operationId: getQueryResults
      parameters:
        - in: path
          name: queryId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResults'

  /query/{queryId}:
    delete:
      summary: Cancel query
      operationId: cancelQuery
      parameters:
        - in: path
          name: queryId
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Query canceled

components:
  schemas:
    QueryResponse:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the query."
        infoUri:
          type: string
          description: "URI for the web UI where query details can be viewed."
        nextUri:
          type: string
          description: |
            URI to retrieve the next set of results.
            It could indicate the next state of the query (e.g., queued, executing).
            Example:
              - /v1/statement/queued/{queryId}
              - /v1/statement/executing/{queryId}
        stats:
          type: object
          description: "Stats about the query execution state."
          properties:
            completedSplits:
              type: integer
              description: "Number of splits completed."
            cpuTimeMillis:
              type: integer
              description: "CPU time consumed by the query."
            elapsedTimeMillis:
              type: integer
              description: "Elapsed time since the query started."
            nodes:
              type: integer
              description: "Number of nodes participating in the query."
            peakMemoryBytes:
              type: integer
              description: "Peak memory usage during the query."
            physicalInputBytes:
              type: integer
              description: "Bytes read from disk or network."
            physicalWrittenBytes:
              type: integer
              description: "Bytes written to disk or network."
            processedBytes:
              type: integer
              description: "Total number of bytes processed."
            processedRows:
              type: integer
              description: "Total number of rows processed."
            queued:
              type: boolean
              description: "Whether the query is in the queue."
            queuedSplits:
              type: integer
              description: "Number of splits queued."
            queuedTimeMillis:
              type: integer
              description: "Total time the query has spent in the queue."
            runningSplits:
              type: integer
              description: "Number of splits currently running."
            scheduled:
              type: boolean
              description: "Whether the query is scheduled."
            spilledBytes:
              type: integer
              description: "Bytes spilled to disk."
            state:
              type: string
              description: "State of the query (QUEUED, RUNNING, etc.)."
            totalSplits:
              type: integer
              description: "Total number of splits in the query."
            wallTimeMillis:
              type: integer
              description: "Total wall time elapsed since query submission."
    QueryResults:
      type: object
      properties:
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: "The name of the column."
              type:
                type: string
                description: "The type of the column, e.g., varchar(75)."
              typeSignature:
                type: object
                properties:
                  rawType:
                    type: string
                    description: "The raw data type."
                  arguments:
                    type: array
                    items:
                      type: object
                      properties:
                        kind:
                          type: string
                          description: "The kind of argument, e.g., LONG."
                        value:
                          type: integer
                          description: "The value associated with the type argument."
        data:
          type: array
          description: "The rows of data returned by the query."
          items:
            type: array
            items:
              type: string