openapi: 3.0.1
info:
  title: Trino Client API
  version: '1.2.0'
  description: API for submitting SQL queries and managing their lifecycle, as well as retrieving cluster information.

servers:
  - url: https://{host}
    variables:
      host:
        default: localhost:8080

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    QueryResponse:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the query."
        infoUri:
          type: string
          description: "URI for the web UI where query details can be viewed."
        nextUri:
          type: string
          description: |
            URI to retrieve the next set of results.
            It could indicate the next state of the query (e.g., queued, executing).
            Example:
              - /v1/statement/queued/{queryId}
              - /v1/statement/executing/{queryId}
        partialCancelUri:
          type: string
          description: "URI to partially cancel a running query."
        stats:
          $ref: '#/components/schemas/QueryStats'
    QueryStats:   
      type: object
      description: "Query execution statistics."
      properties:
        completedSplits:
          type: integer
          description: "Number of splits that have completed."
          example: 0
        cpuTimeMillis:
          type: integer
          description: "CPU time used by the query."
          example: 0
        elapsedTimeMillis:
          type: integer
          description: "Total time elapsed since the query started."
          example: 0
        nodes:
          type: integer
          description: "Number of nodes involved in the query."
          example: 0
        peakMemoryBytes:
          type: integer
          description: "The peak memory usage for the query."
          example: 0
        physicalInputBytes:
          type: integer
          description: "Bytes read from disk or network."
          example: 0
        physicalWrittenBytes:
          type: integer
          description: "Bytes written to disk or network."
          example: 0
        processedBytes:
          type: integer
          description: "Total bytes processed by the query."
          example: 0
        processedRows:
          type: integer
          description: "Total rows processed by the query."
          example: 0
        queued:
          type: boolean
          description: "Indicates if the query is queued."
          example: true
        queuedSplits:
          type: integer
          description: "Number of splits currently queued."
          example: 0
        queuedTimeMillis:
          type: integer
          description: "Total time the query has spent in the queue."
          example: 0
        runningSplits:
          type: integer
          description: "Number of splits currently running."
          example: 0
        scheduled:
          type: boolean
          description: "Indicates if the query is scheduled."
          example: false
        spilledBytes:
          type: integer
          description: "Total bytes spilled to disk."
          example: 0
        state:
          type: string
          description: "Current state of the query (e.g., QUEUED, RUNNING, etc.)."
          example: "QUEUED"
        totalSplits:
          type: integer
          description: "Total number of splits for the query."
          example: 0
        wallTimeMillis:
          type: integer
          description: "Total wall clock time elapsed since the query started."
          example: 0

paths:
  /v1/statement:
    post:
      summary: Submit a SQL query
      operationId: submitQuery
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "SELECT * FROM table"
      responses:
        '200':
          description: Query submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '401':
          description: Unauthorized
          headers:
            WWW-Authenticate:
              schema:
                type: string
                description: |
                  Contains authentication schemes and URLs for OAuth and Basic Authentication.
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"

  /v1/statement/queued/{queryId}/{slug}/{token}:
    get:
      summary: Get queued query results
      operationId: getQueuedResults
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of queued query results

  /v1/statement/executing/{queryId}/{slug}/{token}:
    get:
      summary: Get executing query results
      operationId: getExecutingResults
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of executing query results

  /v1/statement/executing/partialCancel/{queryId}/{slug}/{token}:
    delete:
      summary: Partially cancel an executing query
      operationId: partialCancelQuery
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Query partially cancelled successfully

  /v1/query/{queryId}:
    get:
      summary: Retrieve query details
      operationId: getQueryDetails
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query details retrieved successfully

    delete:
      summary: Cancel a query
      operationId: cancelQuery
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Query cancelled successfully

  /v1/query/{queryId}/killed:
    get:
      summary: Check if a query was killed
      operationId: checkQueryKilled
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query killed status retrieved

  /v1/query/{queryId}/preempted:
    get:
      summary: Check if a query was preempted
      operationId: checkQueryPreempted
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query preempted status retrieved

  /v1/queryState/{queryId}:
    get:
      summary: Get query state
      operationId: getQueryState
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query state retrieved

  /v1/resourceGroupState/{resourceGroupId}:
    get:
      summary: Retrieve resource group state
      operationId: getResourceGroupState
      parameters:
        - in: path
          name: resourceGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource group state retrieved

  /v1/memory:
    get:
      summary: Get memory stats
      operationId: getMemoryStats
      responses:
        '200':
          description: Memory statistics retrieved

  /v1/node:
    get:
      summary: Get node details
      operationId: getNodeDetails
      responses:
        '200':
          description: Node details retrieved

  /v1/info:
    get:
      summary: Get server information
      operationId: getServerInfo
      responses:
        '200':
          description: Server information retrieved

  /v1/info/state:
    get:
      summary: Get server state
      operationId: getServerState
      responses:
        '200':
          description: Server state retrieved

    put:
      summary: Update server state
      operationId: updateServerState
      responses:
        '204':
          description: Server state updated

  /v1/info/coordinator:
    get:
      summary: Get coordinator info
      operationId: getCoordinatorInfo
      responses:
        '200':
          description: Coordinator information retrieved

  /v1/status:
    get:
      summary: Get cluster status
      operationId: getClusterStatus
      responses:
        '200':
          description: Cluster status retrieved
  /v1/maxActiveSplits:
    get:
      summary: Get maximum active splits
      operationId: getMaxActiveSplits
      responses:
        '200':
          description: Maximum active splits retrieved

  /v1/task/{taskId}:
    post:
      summary: Submit a task
      operationId: submitTask
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task submitted successfully

    get:
      summary: Get task details
      operationId: getTaskDetails
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task details retrieved

  /v1/task/{taskId}/status:
    get:
      summary: Get task status
      operationId: getTaskStatus
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task status retrieved

  /v1/task/{taskId}/dynamicfilters:
    get:
      summary: Get task dynamic filters
      operationId: getTaskDynamicFilters
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task dynamic filters retrieved

  /v1/task/{taskId}/fail:
    post:
      summary: Fail a task
      operationId: failTask
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task failed

  /v1/task/{taskId}/results/{bufferId}/{token}:
    get:
      summary: Get task results
      operationId: getTaskResults
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
        - in: path
          name: bufferId
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task results retrieved

  /v1/task/{taskId}/results/{bufferId}/{token}/acknowledge:
    post:
      summary: Acknowledge task result retrieval
      operationId: acknowledgeTaskResults
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
        - in: path
          name: bufferId
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task results acknowledged

  /v1/task/pruneCatalogs:
    post:
      summary: Prune catalogs for a task
      operationId: pruneTaskCatalogs
      responses:
        '204':
          description: Catalogs pruned successfully

  /v1/thread:
    get:
      summary: Get thread details
      operationId: getThreadDetails
      responses:
        '200':
          description: Thread details retrieved

  /ui/api/cluster:
    get:
      summary: Get cluster information from UI API
      operationId: getUIClusterInfo
      responses:
        '200':
          description: Cluster information retrieved

  /ui/api/stats:
    get:
      summary: Get statistics from UI API
      operationId: getUIStats
      responses:
        '200':
          description: UI statistics retrieved

  /ui/login.html:
    get:
      summary: UI login page
      operationId: getUILoginPage
      responses:
        '200':
          description: UI login page retrieved

  /ui/logout:
    get:
      summary: UI logout page
      operationId: getUILogoutPage
      responses:
        '200':
          description: UI logout page retrieved

  /ui/api/query/{queryId}:
    get:
      summary: Get query info via UI API
      operationId: getUIQueryInfo
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query info retrieved successfully

  /ui/api/query/{queryId}/killed:
    get:
      summary: Get query killed status via UI API
      operationId: getUIQueryKilled
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query killed status retrieved

  /ui/api/query/{queryId}/preempted:
    get:
      summary: Get query preempted status via UI API
      operationId: getUIQueryPreempted
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query preempted status retrieved

  /ui/{path: .*}:
    get:
      summary: Get UI path
      operationId: getUIPath
      parameters:
        - in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: UI path retrieved

  /ui/assets/{path: .*}:
    get:
      summary: Get UI assets
      operationId: getUIAssets
      parameters:
        - in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: UI assets retrieved

  /ui/vendor/{path: .*}:
    get:
      summary: Get vendor assets for UI
      operationId: getVendorAssets
      parameters:
        - in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vendor assets retrieved

  /ui/api/worker/{nodeId}/status:
    get:
      summary: Get worker status via UI API
      operationId: getUIWorkerStatus
      parameters:
        - in: path
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Worker status retrieved

  /ui/api/worker/{nodeId}/thread:
    get:
      summary: Get worker threads via UI API
      operationId: getUIWorkerThreads
      parameters:
        - in: path
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Worker threads retrieved

  /v1/proxy:
    get:
      summary: Get proxy info
      operationId: getProxyInfo
      responses:
        '200':
          description: Proxy info retrieved
    delete:
      summary: Delete proxy info
      operationId: deleteProxyInfo
      responses:
        '204':
          description: Proxy info deleted successfully
